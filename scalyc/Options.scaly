class Options {
    init() {}
    static function parseArguments(args: [String]) -> Options throws OptionsError {
        let length: unsigned = args.length
        mutable options: Options = Options()
        options.files = [String]()
        for var i: unsigned = 0; i < length; i++ {

            if length < 2 || args[i][0] != "-" {
                options.files.append(arg)
                continue
            }
            switch args[i][1] {
                case "o": {
                    i++
                    if i == length
                        throw invalidOption(args[i])
                    else
                        options.outputName = args[i]
                }
                case "d": {
                    i++
                    if i == length
                        throw invalidOption(args[i])
                    else
                        options.directory = args[i]
                }
                default:
                    throw unknownOption(args[i])
            }
        }
        if options.outputName == null
            throw noOutputOption
        if options.files.length == 0
            throw noFilesToCompile

        return options
    }

    let files: [String]
    let outputName: String
    let directory: String
}

