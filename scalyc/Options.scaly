class Options {
    init(input: [String], output: String, dir: String) {
        files = input
        outputName = output
        directory = dir
    }

    static function parseArguments(args: [String]) -> Options throws OptionsError {
        let length: unsigned = args.length()
        mutable output: String = null
        mutable dir: String = null
        mutable input: [String] = [String]()
        mutable i: unsigned = 0
        repeat {
            if length < 2 || (args[i]).charAt(0) != '-' {
                input.push(args[i])
                i++
                continue
            }
            switch (args[i]).charAt(1) {
                case "o": {
                    i++
                    if i == length
                        throw invalidOption(args[i])
                    else
                        output = args[i]
                }
                case "d": {
                    i++
                    if i == length
                        throw invalidOption(args[i])
                    else
                        dir = args[i]
                }
                default:
                    throw unknownOption(args[i])
            }
            i++
        } while i < length
        if output == null
            throw noOutputOption
        if input.length == 0
            throw noFilesToCompile

        return new Options(input, output, dir)
    }

    let files: [String]
    let outputName: String
    let directory: String
}

