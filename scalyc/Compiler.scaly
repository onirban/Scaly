class Compiler {
    static function compileFiles(files: [String]) throws CompilerError {

        let sources: [String] = map(files, File.readToString)
            catch _ (file, error) throw UnableToReadFile(file, error)
            
        let compilationUnits: [CompilationUnit] = map(sources, compileUnit)
            catch _ (_, error) throw SyntaxError(error)

        mutable program: Program = Program()
        program.name = String("scalyc")
        program.compilationUnits = compilationUnits
        
        mutable visitor: CppVisitor = CppVisitor()
        program.Accept(visitor)
    }
    
    static function compileUnit(text: String) -> TopLevelDeclaration throws ParserError {
        parser = Parser(text)
        parser.parseTopLevelDeclaration
    }
};
